version: "3.4"

services:
  zookeeper:
    image: bitnami/zookeeper
    restart: always
    container_name: zookeeper
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: bitnami/kafka
    container_name: kafka
    hostname: kafkaserver
    ports:
      - "9092:9092"
    restart: always
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
    depends_on:
      - zookeeper
  mysql-container:
    image: mysql:latest
    container_name: readdb
    restart: always
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=stockMarketRootPw
    expose:
      - 3306
    volumes:
      - "mysql_data_container:/var/lib/mysql mysql:latest"
  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=mysql-container
    expose:
      - 8080
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - "H:/software-development/micro-services/estock-market/estock-market/company-command/src/main/resources/prometheus.yml"
    expose:
      - 9090
  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    ports:
      - "3030:3000"
    expose:
      - 3000

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  mysql_data_container:
    driver: local

networks:
  stockMarketNet:
    driver: bridge
  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:6.4.0
  #   container_name: elasticsearch
  #   # Make a port available to services outside of Docker
  #   ports:
  #     - 9200:9200
  #     - 9300:9300
  #   # Configures docker image to run in bridge mode network
  # kibana:
  #   image: docker.elastic.co/kibana/kibana:6.4.0
  #   container_name: kibana
  #   # Make a port available to services outside of Docker
  #   ports:
  #     - 5601:5601
  #   # It Links kibana container & elasticsearch container to communicate
  #   links:
  #     - elasticsearch:elasticsearch
  #   # Configures docker image to run in bridge mode network
  #   # You can control the order of service startup and shutdown with the depends_on option.
  #   depends_on: ['elasticsearch']
  # logstash:
  #   image: docker.elastic.co/logstash/logstash:6.4.0
  #   container_name: logstash
  #   # It Links elasticsearch container & kafka container  & logstash container to communicate
  #   links:
  #     - elasticsearch:elasticsearch
  #     - kafka:kafka
  #   # Configures docker image to run in bridge mode network
  #   # You can control the order of service startup and shutdown with the depends_on option.
  #   depends_on: ['elasticsearch', 'kafka']
  #   # Mount host volumes into docker containers to supply logstash.config file
  #   volumes:
  #     - '/private/config-dir:/usr/share/logstash/pipeline/'
